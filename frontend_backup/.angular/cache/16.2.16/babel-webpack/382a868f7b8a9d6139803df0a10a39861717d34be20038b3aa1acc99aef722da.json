{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/button\";\nfunction MessageDialogComponent_mat_error_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MessageDialogComponent_mat_error_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Enter a valid email address \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MessageDialogComponent_mat_error_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Message is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class MessageDialogComponent {\n  constructor(dialogRef, http) {\n    this.dialogRef = dialogRef;\n    this.http = http;\n    this.messageData = {\n      name: '',\n      email: '',\n      message: ''\n    };\n  }\n  onSubmit() {\n    // Replace with your backend API endpoint\n    const apiUrl = 'https://your-backend-url.com/api/messages';\n    this.http.post(apiUrl, this.messageData).subscribe(() => {\n      alert('Message sent successfully!');\n      this.dialogRef.close();\n    }, error => {\n      console.error('Error sending message:', error);\n      alert('Failed to send the message. Please try again.');\n    });\n  }\n  static {\n    this.ɵfac = function MessageDialogComponent_Factory(t) {\n      return new (t || MessageDialogComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(i2.HttpClient));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: MessageDialogComponent,\n      selectors: [[\"app-message-dialog\"]],\n      decls: 25,\n      vars: 7,\n      consts: [[\"mat-dialog-title\", \"\"], [3, \"ngSubmit\"], [\"messageForm\", \"ngForm\"], [\"appearance\", \"outline\", 1, \"full-width\"], [\"matInput\", \"\", \"type\", \"text\", \"required\", \"\", \"name\", \"name\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"ngModel\"], [4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"email\", \"required\", \"\", \"name\", \"email\", 3, \"ngModel\", \"ngModelChange\"], [\"email\", \"ngModel\"], [\"matInput\", \"\", \"rows\", \"4\", \"required\", \"\", \"name\", \"message\", 3, \"ngModel\", \"ngModelChange\"], [\"message\", \"ngModel\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"]],\n      template: function MessageDialogComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\", 0);\n          i0.ɵɵtext(1, \"Send Us a Message\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"mat-dialog-content\")(3, \"form\", 1, 2);\n          i0.ɵɵlistener(\"ngSubmit\", function MessageDialogComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(5, \"mat-form-field\", 3)(6, \"mat-label\");\n          i0.ɵɵtext(7, \"Your Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"input\", 4, 5);\n          i0.ɵɵlistener(\"ngModelChange\", function MessageDialogComponent_Template_input_ngModelChange_8_listener($event) {\n            return ctx.messageData.name = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(10, MessageDialogComponent_mat_error_10_Template, 2, 0, \"mat-error\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"mat-form-field\", 3)(12, \"mat-label\");\n          i0.ɵɵtext(13, \"Your Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"input\", 7, 8);\n          i0.ɵɵlistener(\"ngModelChange\", function MessageDialogComponent_Template_input_ngModelChange_14_listener($event) {\n            return ctx.messageData.email = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(16, MessageDialogComponent_mat_error_16_Template, 2, 0, \"mat-error\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"mat-form-field\", 3)(18, \"mat-label\");\n          i0.ɵɵtext(19, \"Your Message\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"textarea\", 9, 10);\n          i0.ɵɵlistener(\"ngModelChange\", function MessageDialogComponent_Template_textarea_ngModelChange_20_listener($event) {\n            return ctx.messageData.message = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(22, MessageDialogComponent_mat_error_22_Template, 2, 0, \"mat-error\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"button\", 11);\n          i0.ɵɵtext(24, \" Send \");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          const _r0 = i0.ɵɵreference(4);\n          const _r1 = i0.ɵɵreference(9);\n          const _r3 = i0.ɵɵreference(15);\n          const _r5 = i0.ɵɵreference(21);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngModel\", ctx.messageData.name);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", _r1.invalid && _r1.touched);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.messageData.email);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", _r3.invalid && _r3.touched);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.messageData.message);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", _r5.invalid && _r5.touched);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"disabled\", _r0.invalid);\n        }\n      },\n      dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm, i1.MatDialogTitle, i1.MatDialogContent, i5.MatFormField, i5.MatLabel, i5.MatError, i6.MatInput, i7.MatButton],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","MessageDialogComponent","constructor","dialogRef","http","messageData","name","email","message","onSubmit","apiUrl","post","subscribe","alert","close","error","console","ɵɵdirectiveInject","i1","MatDialogRef","i2","HttpClient","selectors","decls","vars","consts","template","MessageDialogComponent_Template","rf","ctx","ɵɵlistener","MessageDialogComponent_Template_form_ngSubmit_3_listener","MessageDialogComponent_Template_input_ngModelChange_8_listener","$event","ɵɵtemplate","MessageDialogComponent_mat_error_10_Template","MessageDialogComponent_Template_input_ngModelChange_14_listener","MessageDialogComponent_mat_error_16_Template","MessageDialogComponent_Template_textarea_ngModelChange_20_listener","MessageDialogComponent_mat_error_22_Template","ɵɵadvance","ɵɵproperty","_r1","invalid","touched","_r3","_r5","_r0"],"sources":["F:\\Projects\\Inchaat\\frontend\\src\\app\\shared\\message-dialog\\message-dialog.component.ts","F:\\Projects\\Inchaat\\frontend\\src\\app\\shared\\message-dialog\\message-dialog.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-message-dialog',\n  templateUrl: './message-dialog.component.html',\n})\nexport class MessageDialogComponent {\n  messageData = {\n    name: '',\n    email: '',\n    message: '',\n  };\n\n  constructor(\n    private dialogRef: MatDialogRef<MessageDialogComponent>,\n    private http: HttpClient\n  ) {}\n\n  onSubmit(): void {\n    // Replace with your backend API endpoint\n    const apiUrl = 'https://your-backend-url.com/api/messages';\n    this.http.post(apiUrl, this.messageData).subscribe(\n      () => {\n        alert('Message sent successfully!');\n        this.dialogRef.close();\n      },\n      (error) => {\n        console.error('Error sending message:', error);\n        alert('Failed to send the message. Please try again.');\n      }\n    );\n  }\n}\n","<h2 mat-dialog-title>Send Us a Message</h2>\n<mat-dialog-content>\n  <form (ngSubmit)=\"onSubmit()\" #messageForm=\"ngForm\">\n    <mat-form-field appearance=\"outline\" class=\"full-width\">\n      <mat-label>Your Name</mat-label>\n      <input\n        matInput\n        type=\"text\"\n        required\n        [(ngModel)]=\"messageData.name\"\n        name=\"name\"\n        #name=\"ngModel\"\n      />\n      <mat-error *ngIf=\"name.invalid && name.touched\"\n        >Name is required</mat-error\n      >\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\" class=\"full-width\">\n      <mat-label>Your Email</mat-label>\n      <input\n        matInput\n        type=\"email\"\n        required\n        [(ngModel)]=\"messageData.email\"\n        name=\"email\"\n        #email=\"ngModel\"\n      />\n      <mat-error *ngIf=\"email.invalid && email.touched\">\n        Enter a valid email address\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\" class=\"full-width\">\n      <mat-label>Your Message</mat-label>\n      <textarea\n        matInput\n        rows=\"4\"\n        required\n        [(ngModel)]=\"messageData.message\"\n        name=\"message\"\n        #message=\"ngModel\"\n      ></textarea>\n      <mat-error *ngIf=\"message.invalid && message.touched\"\n        >Message is required</mat-error\n      >\n    </mat-form-field>\n\n    <button\n      mat-raised-button\n      color=\"primary\"\n      type=\"submit\"\n      [disabled]=\"messageForm.invalid\"\n    >\n      Send\n    </button>\n  </form>\n</mat-dialog-content>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}