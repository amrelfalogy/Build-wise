{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { ServicesComponent } from './services.component';\nimport { RouterModule } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: '',\n  component: ServicesComponent\n}];\nexport class ServicesModule {\n  static {\n    this.ɵfac = function ServicesModule_Factory(t) {\n      return new (t || ServicesModule)();\n    };\n  }\n  static {\n    this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: ServicesModule\n    });\n  }\n  static {\n    this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      imports: [CommonModule, RouterModule.forChild(routes)]\n    });\n  }\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(ServicesModule, {\n    declarations: [ServicesComponent],\n    imports: [CommonModule, i1.RouterModule]\n  });\n})();","map":{"version":3,"names":["CommonModule","ServicesComponent","RouterModule","routes","path","component","ServicesModule","forChild","declarations","imports","i1"],"sources":["F:\\Projects\\Inchaat\\frontend\\src\\app\\services\\services.module.ts"],"sourcesContent":["// home.module.ts\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ServicesComponent } from './services.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [{ path: '', component: ServicesComponent }];\r\n\r\n@NgModule({\r\n  declarations: [ServicesComponent],\r\n  imports: [CommonModule, RouterModule.forChild(routes)],\r\n})\r\nexport class ServicesModule {}\r\n"],"mappings":"AAEA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,iBAAiB,QAAQ,sBAAsB;AACxD,SAASC,YAAY,QAAgB,iBAAiB;;;AAEtD,MAAMC,MAAM,GAAW,CAAC;EAAEC,IAAI,EAAE,EAAE;EAAEC,SAAS,EAAEJ;AAAiB,CAAE,CAAC;AAMnE,OAAM,MAAOK,cAAc;;;uBAAdA,cAAc;IAAA;EAAA;;;YAAdA;IAAc;EAAA;;;gBAFfN,YAAY,EAAEE,YAAY,CAACK,QAAQ,CAACJ,MAAM,CAAC;IAAA;EAAA;;;2EAE1CG,cAAc;IAAAE,YAAA,GAHVP,iBAAiB;IAAAQ,OAAA,GACtBT,YAAY,EAAAU,EAAA,CAAAR,YAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}