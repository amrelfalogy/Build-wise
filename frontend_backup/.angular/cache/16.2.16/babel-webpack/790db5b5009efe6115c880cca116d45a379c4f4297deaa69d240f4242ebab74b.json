{"ast":null,"code":"import { isDevMode } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { ProjectsComponent } from './projects/projects.component';\nimport { LayoutComponent } from './layout/layout.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/service-worker\";\nexport class AppModule {\n  static {\n    this.ɵfac = function AppModule_Factory(t) {\n      return new (t || AppModule)();\n    };\n  }\n  static {\n    this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppModule,\n      bootstrap: [AppComponent]\n    });\n  }\n  static {\n    this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      imports: [BrowserModule, ReactiveFormsModule, FormsModule, AppRoutingModule, FontAwesomeModule, RouterModule, ServiceWorkerModule.register('ngsw-worker.js', {\n        enabled: !isDevMode(),\n        // Register the ServiceWorker as soon as the application is stable\n        // or after 30 seconds (whichever comes first).\n        registrationStrategy: 'registerWhenStable:30000'\n      })]\n    });\n  }\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [AppComponent, ProjectsComponent, LayoutComponent],\n    imports: [BrowserModule, ReactiveFormsModule, FormsModule, AppRoutingModule, FontAwesomeModule, RouterModule, i1.ServiceWorkerModule]\n  });\n})();","map":{"version":3,"names":["isDevMode","BrowserModule","FormsModule","ReactiveFormsModule","AppRoutingModule","RouterModule","AppComponent","ProjectsComponent","LayoutComponent","FontAwesomeModule","ServiceWorkerModule","AppModule","bootstrap","register","enabled","registrationStrategy","declarations","imports","i1"],"sources":["F:\\Projects\\Inchaat\\frontend\\src\\app\\app.module.ts"],"sourcesContent":["import { NgModule, isDevMode } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { ProjectsComponent } from './projects/projects.component';\nimport { LayoutComponent } from './layout/layout.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\n@NgModule({\n  declarations: [AppComponent, ProjectsComponent, LayoutComponent],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    FormsModule,\n    AppRoutingModule,\n    FontAwesomeModule,\n    RouterModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: !isDevMode(),\n      // Register the ServiceWorker as soon as the application is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000'\n    }),\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n"],"mappings":"AAAA,SAAmBA,SAAS,QAAQ,eAAe;AACnD,SAASC,aAAa,QAAQ,2BAA2B;AACzD,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,mBAAmB,QAAQ,gBAAgB;AAEpD,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,iBAAiB,QAAQ,+BAA+B;AACjE,SAASC,eAAe,QAAQ,2BAA2B;AAC3D,SAASC,iBAAiB,QAAQ,kCAAkC;AACpE,SAASC,mBAAmB,QAAQ,yBAAyB;;;AAoB7D,OAAM,MAAOC,SAAS;;;uBAATA,SAAS;IAAA;EAAA;;;YAATA,SAAS;MAAAC,SAAA,GAFRN,YAAY;IAAA;EAAA;;;gBAbtBL,aAAa,EACbE,mBAAmB,EACnBD,WAAW,EACXE,gBAAgB,EAChBK,iBAAiB,EACjBJ,YAAY,EACZK,mBAAmB,CAACG,QAAQ,CAAC,gBAAgB,EAAE;QAC7CC,OAAO,EAAE,CAACd,SAAS,EAAE;QACrB;QACA;QACAe,oBAAoB,EAAE;OACvB,CAAC;IAAA;EAAA;;;2EAIOJ,SAAS;IAAAK,YAAA,GAjBLV,YAAY,EAAEC,iBAAiB,EAAEC,eAAe;IAAAS,OAAA,GAE7DhB,aAAa,EACbE,mBAAmB,EACnBD,WAAW,EACXE,gBAAgB,EAChBK,iBAAiB,EACjBJ,YAAY,EAAAa,EAAA,CAAAR,mBAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}